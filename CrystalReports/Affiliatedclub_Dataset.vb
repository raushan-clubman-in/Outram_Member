'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2470
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class Affiliatedclub_Dataset
    Inherits DataSet
    
    Private tablevw_affiliatedclubdetails As vw_affiliatedclubdetailsDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("vw_affiliatedclubdetails")) Is Nothing) Then
                Me.Tables.Add(New vw_affiliatedclubdetailsDataTable(ds.Tables("vw_affiliatedclubdetails")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vw_affiliatedclubdetails As vw_affiliatedclubdetailsDataTable
        Get
            Return Me.tablevw_affiliatedclubdetails
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As Affiliatedclub_Dataset = CType(MyBase.Clone,Affiliatedclub_Dataset)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("vw_affiliatedclubdetails")) Is Nothing) Then
            Me.Tables.Add(New vw_affiliatedclubdetailsDataTable(ds.Tables("vw_affiliatedclubdetails")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tablevw_affiliatedclubdetails = CType(Me.Tables("vw_affiliatedclubdetails"),vw_affiliatedclubdetailsDataTable)
        If (Not (Me.tablevw_affiliatedclubdetails) Is Nothing) Then
            Me.tablevw_affiliatedclubdetails.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "Affiliatedclub_Dataset"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/Affiliatedclub_Dataset.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tablevw_affiliatedclubdetails = New vw_affiliatedclubdetailsDataTable
        Me.Tables.Add(Me.tablevw_affiliatedclubdetails)
    End Sub
    
    Private Function ShouldSerializevw_affiliatedclubdetails() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub vw_affiliatedclubdetailsRowChangeEventHandler(ByVal sender As Object, ByVal e As vw_affiliatedclubdetailsRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class vw_affiliatedclubdetailsDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnRowid As DataColumn
        
        Private columnCLUBCODE As DataColumn
        
        Private columnCLUBNAME As DataColumn
        
        Private columnADDRESS1 As DataColumn
        
        Private columnADDRESS2 As DataColumn
        
        Private columnCITY As DataColumn
        
        Private columnSTATE As DataColumn
        
        Private columnPINCODE As DataColumn
        
        Private columnPHONE1 As DataColumn
        
        Private columnPHONE2 As DataColumn
        
        Private columnFAX As DataColumn
        
        Private columnEMAIL As DataColumn
        
        Private columnADDUSERID As DataColumn
        
        Private columnADDDATETIME As DataColumn
        
        Private columnUPDUSERID As DataColumn
        
        Private columnUPDDATETIME As DataColumn
        
        Private columnACPLACE As DataColumn
        
        Private columnSTDCODE As DataColumn
        
        Private columnROOM As DataColumn
        
        Private columnWEBSITE As DataColumn
        
        Private columnFACILITY As DataColumn
        
        Private columnContactperson As DataColumn
        
        Private columnfreeze As DataColumn
        
        Friend Sub New()
            MyBase.New("vw_affiliatedclubdetails")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property RowidColumn As DataColumn
            Get
                Return Me.columnRowid
            End Get
        End Property
        
        Friend ReadOnly Property CLUBCODEColumn As DataColumn
            Get
                Return Me.columnCLUBCODE
            End Get
        End Property
        
        Friend ReadOnly Property CLUBNAMEColumn As DataColumn
            Get
                Return Me.columnCLUBNAME
            End Get
        End Property
        
        Friend ReadOnly Property ADDRESS1Column As DataColumn
            Get
                Return Me.columnADDRESS1
            End Get
        End Property
        
        Friend ReadOnly Property ADDRESS2Column As DataColumn
            Get
                Return Me.columnADDRESS2
            End Get
        End Property
        
        Friend ReadOnly Property CITYColumn As DataColumn
            Get
                Return Me.columnCITY
            End Get
        End Property
        
        Friend ReadOnly Property STATEColumn As DataColumn
            Get
                Return Me.columnSTATE
            End Get
        End Property
        
        Friend ReadOnly Property PINCODEColumn As DataColumn
            Get
                Return Me.columnPINCODE
            End Get
        End Property
        
        Friend ReadOnly Property PHONE1Column As DataColumn
            Get
                Return Me.columnPHONE1
            End Get
        End Property
        
        Friend ReadOnly Property PHONE2Column As DataColumn
            Get
                Return Me.columnPHONE2
            End Get
        End Property
        
        Friend ReadOnly Property FAXColumn As DataColumn
            Get
                Return Me.columnFAX
            End Get
        End Property
        
        Friend ReadOnly Property EMAILColumn As DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property
        
        Friend ReadOnly Property ADDUSERIDColumn As DataColumn
            Get
                Return Me.columnADDUSERID
            End Get
        End Property
        
        Friend ReadOnly Property ADDDATETIMEColumn As DataColumn
            Get
                Return Me.columnADDDATETIME
            End Get
        End Property
        
        Friend ReadOnly Property UPDUSERIDColumn As DataColumn
            Get
                Return Me.columnUPDUSERID
            End Get
        End Property
        
        Friend ReadOnly Property UPDDATETIMEColumn As DataColumn
            Get
                Return Me.columnUPDDATETIME
            End Get
        End Property
        
        Friend ReadOnly Property ACPLACEColumn As DataColumn
            Get
                Return Me.columnACPLACE
            End Get
        End Property
        
        Friend ReadOnly Property STDCODEColumn As DataColumn
            Get
                Return Me.columnSTDCODE
            End Get
        End Property
        
        Friend ReadOnly Property ROOMColumn As DataColumn
            Get
                Return Me.columnROOM
            End Get
        End Property
        
        Friend ReadOnly Property WEBSITEColumn As DataColumn
            Get
                Return Me.columnWEBSITE
            End Get
        End Property
        
        Friend ReadOnly Property FACILITYColumn As DataColumn
            Get
                Return Me.columnFACILITY
            End Get
        End Property
        
        Friend ReadOnly Property ContactpersonColumn As DataColumn
            Get
                Return Me.columnContactperson
            End Get
        End Property
        
        Friend ReadOnly Property freezeColumn As DataColumn
            Get
                Return Me.columnfreeze
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As vw_affiliatedclubdetailsRow
            Get
                Return CType(Me.Rows(index),vw_affiliatedclubdetailsRow)
            End Get
        End Property
        
        Public Event vw_affiliatedclubdetailsRowChanged As vw_affiliatedclubdetailsRowChangeEventHandler
        
        Public Event vw_affiliatedclubdetailsRowChanging As vw_affiliatedclubdetailsRowChangeEventHandler
        
        Public Event vw_affiliatedclubdetailsRowDeleted As vw_affiliatedclubdetailsRowChangeEventHandler
        
        Public Event vw_affiliatedclubdetailsRowDeleting As vw_affiliatedclubdetailsRowChangeEventHandler
        
        Public Overloads Sub Addvw_affiliatedclubdetailsRow(ByVal row As vw_affiliatedclubdetailsRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addvw_affiliatedclubdetailsRow( _
                    ByVal CLUBCODE As String,  _
                    ByVal CLUBNAME As String,  _
                    ByVal ADDRESS1 As String,  _
                    ByVal ADDRESS2 As String,  _
                    ByVal CITY As String,  _
                    ByVal STATE As String,  _
                    ByVal PINCODE As String,  _
                    ByVal PHONE1 As String,  _
                    ByVal PHONE2 As String,  _
                    ByVal FAX As String,  _
                    ByVal EMAIL As String,  _
                    ByVal ADDUSERID As String,  _
                    ByVal ADDDATETIME As Date,  _
                    ByVal UPDUSERID As String,  _
                    ByVal UPDDATETIME As Date,  _
                    ByVal ACPLACE As String,  _
                    ByVal STDCODE As Decimal,  _
                    ByVal ROOM As String,  _
                    ByVal WEBSITE As String,  _
                    ByVal FACILITY As String,  _
                    ByVal Contactperson As String,  _
                    ByVal freeze As String) As vw_affiliatedclubdetailsRow
            Dim rowvw_affiliatedclubdetailsRow As vw_affiliatedclubdetailsRow = CType(Me.NewRow,vw_affiliatedclubdetailsRow)
            rowvw_affiliatedclubdetailsRow.ItemArray = New Object() {Nothing, CLUBCODE, CLUBNAME, ADDRESS1, ADDRESS2, CITY, STATE, PINCODE, PHONE1, PHONE2, FAX, EMAIL, ADDUSERID, ADDDATETIME, UPDUSERID, UPDDATETIME, ACPLACE, STDCODE, ROOM, WEBSITE, FACILITY, Contactperson, freeze}
            Me.Rows.Add(rowvw_affiliatedclubdetailsRow)
            Return rowvw_affiliatedclubdetailsRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As vw_affiliatedclubdetailsDataTable = CType(MyBase.Clone,vw_affiliatedclubdetailsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New vw_affiliatedclubdetailsDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnRowid = Me.Columns("Rowid")
            Me.columnCLUBCODE = Me.Columns("CLUBCODE")
            Me.columnCLUBNAME = Me.Columns("CLUBNAME")
            Me.columnADDRESS1 = Me.Columns("ADDRESS1")
            Me.columnADDRESS2 = Me.Columns("ADDRESS2")
            Me.columnCITY = Me.Columns("CITY")
            Me.columnSTATE = Me.Columns("STATE")
            Me.columnPINCODE = Me.Columns("PINCODE")
            Me.columnPHONE1 = Me.Columns("PHONE1")
            Me.columnPHONE2 = Me.Columns("PHONE2")
            Me.columnFAX = Me.Columns("FAX")
            Me.columnEMAIL = Me.Columns("EMAIL")
            Me.columnADDUSERID = Me.Columns("ADDUSERID")
            Me.columnADDDATETIME = Me.Columns("ADDDATETIME")
            Me.columnUPDUSERID = Me.Columns("UPDUSERID")
            Me.columnUPDDATETIME = Me.Columns("UPDDATETIME")
            Me.columnACPLACE = Me.Columns("ACPLACE")
            Me.columnSTDCODE = Me.Columns("STDCODE")
            Me.columnROOM = Me.Columns("ROOM")
            Me.columnWEBSITE = Me.Columns("WEBSITE")
            Me.columnFACILITY = Me.Columns("FACILITY")
            Me.columnContactperson = Me.Columns("Contactperson")
            Me.columnfreeze = Me.Columns("freeze")
        End Sub
        
        Private Sub InitClass()
            Me.columnRowid = New DataColumn("Rowid", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnRowid)
            Me.columnCLUBCODE = New DataColumn("CLUBCODE", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCLUBCODE)
            Me.columnCLUBNAME = New DataColumn("CLUBNAME", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCLUBNAME)
            Me.columnADDRESS1 = New DataColumn("ADDRESS1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnADDRESS1)
            Me.columnADDRESS2 = New DataColumn("ADDRESS2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnADDRESS2)
            Me.columnCITY = New DataColumn("CITY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCITY)
            Me.columnSTATE = New DataColumn("STATE", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSTATE)
            Me.columnPINCODE = New DataColumn("PINCODE", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPINCODE)
            Me.columnPHONE1 = New DataColumn("PHONE1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPHONE1)
            Me.columnPHONE2 = New DataColumn("PHONE2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPHONE2)
            Me.columnFAX = New DataColumn("FAX", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFAX)
            Me.columnEMAIL = New DataColumn("EMAIL", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnEMAIL)
            Me.columnADDUSERID = New DataColumn("ADDUSERID", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnADDUSERID)
            Me.columnADDDATETIME = New DataColumn("ADDDATETIME", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnADDDATETIME)
            Me.columnUPDUSERID = New DataColumn("UPDUSERID", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUPDUSERID)
            Me.columnUPDDATETIME = New DataColumn("UPDDATETIME", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUPDDATETIME)
            Me.columnACPLACE = New DataColumn("ACPLACE", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnACPLACE)
            Me.columnSTDCODE = New DataColumn("STDCODE", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSTDCODE)
            Me.columnROOM = New DataColumn("ROOM", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnROOM)
            Me.columnWEBSITE = New DataColumn("WEBSITE", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnWEBSITE)
            Me.columnFACILITY = New DataColumn("FACILITY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnFACILITY)
            Me.columnContactperson = New DataColumn("Contactperson", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnContactperson)
            Me.columnfreeze = New DataColumn("freeze", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnfreeze)
            Me.columnRowid.AutoIncrement = true
            Me.columnRowid.AllowDBNull = false
            Me.columnRowid.ReadOnly = true
        End Sub
        
        Public Function Newvw_affiliatedclubdetailsRow() As vw_affiliatedclubdetailsRow
            Return CType(Me.NewRow,vw_affiliatedclubdetailsRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New vw_affiliatedclubdetailsRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(vw_affiliatedclubdetailsRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vw_affiliatedclubdetailsRowChangedEvent) Is Nothing) Then
                RaiseEvent vw_affiliatedclubdetailsRowChanged(Me, New vw_affiliatedclubdetailsRowChangeEvent(CType(e.Row,vw_affiliatedclubdetailsRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vw_affiliatedclubdetailsRowChangingEvent) Is Nothing) Then
                RaiseEvent vw_affiliatedclubdetailsRowChanging(Me, New vw_affiliatedclubdetailsRowChangeEvent(CType(e.Row,vw_affiliatedclubdetailsRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vw_affiliatedclubdetailsRowDeletedEvent) Is Nothing) Then
                RaiseEvent vw_affiliatedclubdetailsRowDeleted(Me, New vw_affiliatedclubdetailsRowChangeEvent(CType(e.Row,vw_affiliatedclubdetailsRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vw_affiliatedclubdetailsRowDeletingEvent) Is Nothing) Then
                RaiseEvent vw_affiliatedclubdetailsRowDeleting(Me, New vw_affiliatedclubdetailsRowChangeEvent(CType(e.Row,vw_affiliatedclubdetailsRow), e.Action))
            End If
        End Sub
        
        Public Sub Removevw_affiliatedclubdetailsRow(ByVal row As vw_affiliatedclubdetailsRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class vw_affiliatedclubdetailsRow
        Inherits DataRow
        
        Private tablevw_affiliatedclubdetails As vw_affiliatedclubdetailsDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tablevw_affiliatedclubdetails = CType(Me.Table,vw_affiliatedclubdetailsDataTable)
        End Sub
        
        Public Property Rowid As Decimal
            Get
                Return CType(Me(Me.tablevw_affiliatedclubdetails.RowidColumn),Decimal)
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.RowidColumn) = value
            End Set
        End Property
        
        Public Property CLUBCODE As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.CLUBCODEColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.CLUBCODEColumn) = value
            End Set
        End Property
        
        Public Property CLUBNAME As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.CLUBNAMEColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.CLUBNAMEColumn) = value
            End Set
        End Property
        
        Public Property ADDRESS1 As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.ADDRESS1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.ADDRESS1Column) = value
            End Set
        End Property
        
        Public Property ADDRESS2 As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.ADDRESS2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.ADDRESS2Column) = value
            End Set
        End Property
        
        Public Property CITY As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.CITYColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.CITYColumn) = value
            End Set
        End Property
        
        Public Property STATE As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.STATEColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.STATEColumn) = value
            End Set
        End Property
        
        Public Property PINCODE As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.PINCODEColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.PINCODEColumn) = value
            End Set
        End Property
        
        Public Property PHONE1 As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.PHONE1Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.PHONE1Column) = value
            End Set
        End Property
        
        Public Property PHONE2 As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.PHONE2Column),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.PHONE2Column) = value
            End Set
        End Property
        
        Public Property FAX As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.FAXColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.FAXColumn) = value
            End Set
        End Property
        
        Public Property EMAIL As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.EMAILColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.EMAILColumn) = value
            End Set
        End Property
        
        Public Property ADDUSERID As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.ADDUSERIDColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.ADDUSERIDColumn) = value
            End Set
        End Property
        
        Public Property ADDDATETIME As Date
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.ADDDATETIMEColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.ADDDATETIMEColumn) = value
            End Set
        End Property
        
        Public Property UPDUSERID As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.UPDUSERIDColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.UPDUSERIDColumn) = value
            End Set
        End Property
        
        Public Property UPDDATETIME As Date
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.UPDDATETIMEColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.UPDDATETIMEColumn) = value
            End Set
        End Property
        
        Public Property ACPLACE As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.ACPLACEColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.ACPLACEColumn) = value
            End Set
        End Property
        
        Public Property STDCODE As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.STDCODEColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.STDCODEColumn) = value
            End Set
        End Property
        
        Public Property ROOM As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.ROOMColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.ROOMColumn) = value
            End Set
        End Property
        
        Public Property WEBSITE As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.WEBSITEColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.WEBSITEColumn) = value
            End Set
        End Property
        
        Public Property FACILITY As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.FACILITYColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.FACILITYColumn) = value
            End Set
        End Property
        
        Public Property Contactperson As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.ContactpersonColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.ContactpersonColumn) = value
            End Set
        End Property
        
        Public Property freeze As String
            Get
                Try 
                    Return CType(Me(Me.tablevw_affiliatedclubdetails.freezeColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevw_affiliatedclubdetails.freezeColumn) = value
            End Set
        End Property
        
        Public Function IsCLUBCODENull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.CLUBCODEColumn)
        End Function
        
        Public Sub SetCLUBCODENull()
            Me(Me.tablevw_affiliatedclubdetails.CLUBCODEColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsCLUBNAMENull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.CLUBNAMEColumn)
        End Function
        
        Public Sub SetCLUBNAMENull()
            Me(Me.tablevw_affiliatedclubdetails.CLUBNAMEColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsADDRESS1Null() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.ADDRESS1Column)
        End Function
        
        Public Sub SetADDRESS1Null()
            Me(Me.tablevw_affiliatedclubdetails.ADDRESS1Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsADDRESS2Null() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.ADDRESS2Column)
        End Function
        
        Public Sub SetADDRESS2Null()
            Me(Me.tablevw_affiliatedclubdetails.ADDRESS2Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsCITYNull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.CITYColumn)
        End Function
        
        Public Sub SetCITYNull()
            Me(Me.tablevw_affiliatedclubdetails.CITYColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSTATENull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.STATEColumn)
        End Function
        
        Public Sub SetSTATENull()
            Me(Me.tablevw_affiliatedclubdetails.STATEColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsPINCODENull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.PINCODEColumn)
        End Function
        
        Public Sub SetPINCODENull()
            Me(Me.tablevw_affiliatedclubdetails.PINCODEColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsPHONE1Null() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.PHONE1Column)
        End Function
        
        Public Sub SetPHONE1Null()
            Me(Me.tablevw_affiliatedclubdetails.PHONE1Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsPHONE2Null() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.PHONE2Column)
        End Function
        
        Public Sub SetPHONE2Null()
            Me(Me.tablevw_affiliatedclubdetails.PHONE2Column) = System.Convert.DBNull
        End Sub
        
        Public Function IsFAXNull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.FAXColumn)
        End Function
        
        Public Sub SetFAXNull()
            Me(Me.tablevw_affiliatedclubdetails.FAXColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsEMAILNull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.EMAILColumn)
        End Function
        
        Public Sub SetEMAILNull()
            Me(Me.tablevw_affiliatedclubdetails.EMAILColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsADDUSERIDNull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.ADDUSERIDColumn)
        End Function
        
        Public Sub SetADDUSERIDNull()
            Me(Me.tablevw_affiliatedclubdetails.ADDUSERIDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsADDDATETIMENull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.ADDDATETIMEColumn)
        End Function
        
        Public Sub SetADDDATETIMENull()
            Me(Me.tablevw_affiliatedclubdetails.ADDDATETIMEColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsUPDUSERIDNull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.UPDUSERIDColumn)
        End Function
        
        Public Sub SetUPDUSERIDNull()
            Me(Me.tablevw_affiliatedclubdetails.UPDUSERIDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsUPDDATETIMENull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.UPDDATETIMEColumn)
        End Function
        
        Public Sub SetUPDDATETIMENull()
            Me(Me.tablevw_affiliatedclubdetails.UPDDATETIMEColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsACPLACENull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.ACPLACEColumn)
        End Function
        
        Public Sub SetACPLACENull()
            Me(Me.tablevw_affiliatedclubdetails.ACPLACEColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsSTDCODENull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.STDCODEColumn)
        End Function
        
        Public Sub SetSTDCODENull()
            Me(Me.tablevw_affiliatedclubdetails.STDCODEColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsROOMNull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.ROOMColumn)
        End Function
        
        Public Sub SetROOMNull()
            Me(Me.tablevw_affiliatedclubdetails.ROOMColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsWEBSITENull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.WEBSITEColumn)
        End Function
        
        Public Sub SetWEBSITENull()
            Me(Me.tablevw_affiliatedclubdetails.WEBSITEColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsFACILITYNull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.FACILITYColumn)
        End Function
        
        Public Sub SetFACILITYNull()
            Me(Me.tablevw_affiliatedclubdetails.FACILITYColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsContactpersonNull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.ContactpersonColumn)
        End Function
        
        Public Sub SetContactpersonNull()
            Me(Me.tablevw_affiliatedclubdetails.ContactpersonColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsfreezeNull() As Boolean
            Return Me.IsNull(Me.tablevw_affiliatedclubdetails.freezeColumn)
        End Function
        
        Public Sub SetfreezeNull()
            Me(Me.tablevw_affiliatedclubdetails.freezeColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class vw_affiliatedclubdetailsRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As vw_affiliatedclubdetailsRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As vw_affiliatedclubdetailsRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As vw_affiliatedclubdetailsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
